<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- annotation기반으로 해서 등록할 빈을 찾겠다는 의미 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->

	<!-- 정적 리소스에 대한 url매핑을 하고자할때 사용 -->
  <resources mapping="/static/**" 	location="/resources/" />
 	<resources mapping="/css/**" 			location="/WEB-INF/resources/css/" />
	<resources mapping="/js/**" 			location="/WEB-INF/resources/js/" />
	<resources mapping="/img/**" 			location="/WEB-INF/resources/img/" />
	<resources mapping="/video/**" 		location="/WEB-INF/resources/video/" />
	<resources mapping="/html/**" 		location="/WEB-INF/resources/html/" />
	<resources mapping="/upload/**" 	location="/WEB-INF/resources/upload/" />
		
	<!-- 웹컴포넌트 라이브러리 url매핑-->
	<resources mapping="/webjars/**" 	location="classpath:/META-INF/resources/webjars/"/>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
		
	<!-- 파일 업로드 -->
	<beans:bean id="multipartResolver"
							class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일 업로드 제한 용량설정 10MB 1024*1024*10, 1kb=1024byte, 1mb = 1024kbyte -->					
		<beans:property name="maxUploadSize" 		value="10485760" />
		<beans:property name="defaultEncoding" 	value="utf-8"/>
	</beans:bean>
	
	<!-- interceptor 설정 -->
	<beans:bean id="authInterceptor"
							class="com.kh.portfolio.interceptor.AuthInterceptor"/>
	<beans:bean id="reqURIInterceptor"
							class="com.kh.portfolio.interceptor.ReqURIInterceptor"/>
	<interceptors>
		<!-- 로그인 세션 확인 -->
		<interceptor>
			<!-- 1) 인증이필요한 uri지정-->
			<mapping path="/admin/**/"/>
			<mapping path="/board/writeForm/**"/>
			<mapping path="/board/reply/**"/>
			<!-- 2) interceptor구현 클래스-->
			<beans:ref bean="authInterceptor"/>
		</interceptor>
		<interceptor>
			<!-- 1) 인증이필요한 uri지정-->
			<mapping path="/login"/>
			<!-- 2) interceptor구현 클래스-->
			<beans:ref bean="reqURIInterceptor"/>
		</interceptor>		
	</interceptors>
		
	<!-- @component :@Controller, @Service, @Repository중에서 
									 @Controller 클래스만 인스턴스화 하도록 설정함 -->
	<context:component-scan base-package="com.kh.portfolio"
													use-default-filters="false">
		<context:include-filter type="annotation" 
														expression="org.springframework.stereotype.Controller"/>												
		<!-- 예외 처리 컨트롤러 -->														
		<context:include-filter type="annotation" 
														expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
		
	<!-- @Aspect가 적용된 클래스를 자동으로 실행시점에 타겟(핵심기능)에 위빙(삽입과정)하는 설정-->
	<aop:aspectj-autoproxy/>
	
</beans:beans>
